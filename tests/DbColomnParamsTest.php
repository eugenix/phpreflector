<?php
require_once 'PHPUnit/Framework.php';

require_once '../include/DbColomnParams.php';

/**
 * @column(id)
 * @column(id, type="int(10)", unsigned=true)
 * @column(type="varchar(256)", unique=false, nullable=false)
 * @column(type="datetime", nullable=true)
 * @column(name="myfield", type="varchar(256)", unique=false, nullable=false)
 */




/**
 * Test class for DbColomnParams.
 * Generated by PHPUnit on 2011-09-19 at 15:09:08.
 */
class DbColomnParamsTest extends PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testParse()
    {
        $p = Field::extract('name="myfield", type="varchar(256)", unique=false, nullable=false, unsigned=true');

	    $this->assertEquals("myfield", $p->name);
	    $this->assertEquals("varchar(256)", $p->type);
	    $this->assertEquals(false, $p->isUnique);
	    $this->assertEquals(false, $p->allowNull);
	    $this->assertEquals(false, $p->isId);
	    $this->assertEquals(true, $p->isUnsigned);

	    $p = Field::extract('type="varchar(256)", nullable=true, unsigned=true, unique=true');
	    $this->assertEquals(null, $p->name);
	    $this->assertEquals("varchar(256)", $p->type);
	    $this->assertEquals(true, $p->isUnique);
	    $this->assertEquals(true, $p->allowNull);
	    $this->assertEquals(false, $p->isId);
	    $this->assertEquals(true, $p->isUnsigned);

	    $p = Field::extract('type="timestamp"');
	    $this->assertEquals("timestamp", $p->type);

	    $p = Field::extract('id');
	    $this->assertEquals(true, $p->isId);

    }

   /**
	* @expectedException RuntimeException
	*/
	public function testRequiredId()
	{
		Field::extract('unique=false, nullable=false, unsigned=true');
	}
}
?>
